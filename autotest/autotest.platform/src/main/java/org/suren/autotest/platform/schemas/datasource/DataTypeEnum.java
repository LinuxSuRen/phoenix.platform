//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.22 at 09:12:27 PM CST 
//


package org.suren.autotest.platform.schemas.datasource;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for dataTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="dataTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="simple"/>
 *     &lt;enumeration value="page_ref"/>
 *     &lt;enumeration value="groovy"/>
 *     &lt;enumeration value="javascript"/>
 *     &lt;enumeration value="encrypt"/>
 *     &lt;enumeration value="callback"/>
 *     &lt;enumeration value="sequence"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "dataTypeEnum")
@XmlEnum
public enum DataTypeEnum {


    /**
     * 
     * 						简单的数据类型，可以是静态数据或者是根据框架提供的动态数据。
     * 					
     * 
     */
    @XmlEnumValue("simple")
    SIMPLE("simple"),

    /**
     * 
     * 						Page类之间的数据引用，例如：User.name。
     * 					
     * 
     */
    @XmlEnumValue("page_ref")
    PAGE_REF("page_ref"),

    /**
     * 
     * 						groovy动态数据，更多请参考http://surenpi.com/?s=groovy。
     * 					
     * 
     */
    @XmlEnumValue("groovy")
    GROOVY("groovy"),

    /**
     * 
     * 						javascript动态数据，更多请参考http://surenpi.com/?s=javascript。
     * 					
     * 
     */
    @XmlEnumValue("javascript")
    JAVASCRIPT("javascript"),

    /**
     * 
     * 						密文，密钥在框架配置文件encrypt.properties中。
     * 					
     * 
     */
    @XmlEnumValue("encrypt")
    ENCRYPT("encrypt"),

    /**
     * 
     * 						回调函数，要给定一个类名+方法名（可选），例如：org.suren.autotest.CallBack!test。其中CallBack为类名，test为方法名，如果不写方法名的话默认为execute。方法要求返回字符串类型，参数为一个字符串类型或者是SettingUtil类型和字符串类型，例如：execute(String),execute(SettingUtil, String)
     * 					
     * 
     */
    @XmlEnumValue("callback")
    CALLBACK("callback"),

    /**
     * 
     * 						密文，密钥在框架配置文件encrypt.properties中。
     * 					
     * 
     */
    @XmlEnumValue("sequence")
    SEQUENCE("sequence");
    private final String value;

    DataTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataTypeEnum fromValue(String v) {
        for (DataTypeEnum c: DataTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
